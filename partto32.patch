diff --git a/backend/leanstore/concurrency-recovery/WALEntry.hpp b/backend/leanstore/concurrency-recovery/WALEntry.hpp
index cb53f03..173a97f 100644
--- a/backend/leanstore/concurrency-recovery/WALEntry.hpp
+++ b/backend/leanstore/concurrency-recovery/WALEntry.hpp
@@ -16,7 +16,7 @@ struct WALEntry {
    // -------------------------------------------------------------------------------------
    u64 magic_debugging_number = 99;
    std::atomic<LID> lsn;
-   u16 size;
+   u32 size;
    TYPE type;
    void computeCRC() { magic_debugging_number = utils::CRC(reinterpret_cast<u8*>(this) + sizeof(u64), size - sizeof(u64)); }
    void checkCRC() const
diff --git a/backend/leanstore/storage/btree/core/BTreeNode.hpp b/backend/leanstore/storage/btree/core/BTreeNode.hpp
index 7ac987e..d423bae 100644
--- a/backend/leanstore/storage/btree/core/BTreeNode.hpp
+++ b/backend/leanstore/storage/btree/core/BTreeNode.hpp
@@ -46,8 +46,8 @@ static inline u8 swap(u8 x)
 }
 // -------------------------------------------------------------------------------------
 struct BTreeNodeHeader {
-   static const u16 underFullSize = EFFECTIVE_PAGE_SIZE * 0.6;
-   static const u16 K_WAY_MERGE_THRESHOLD = EFFECTIVE_PAGE_SIZE * 0.45;
+   static const u32 underFullSize = EFFECTIVE_PAGE_SIZE * 0.6;
+   static const u32 K_WAY_MERGE_THRESHOLD = EFFECTIVE_PAGE_SIZE * 0.45;
 
    struct SeparatorInfo {
       u16 length;
diff --git a/backend/leanstore/storage/buffer-manager/BufferFrame.hpp b/backend/leanstore/storage/buffer-manager/BufferFrame.hpp
index 40dbc90..09710ad 100644
--- a/backend/leanstore/storage/buffer-manager/BufferFrame.hpp
+++ b/backend/leanstore/storage/buffer-manager/BufferFrame.hpp
@@ -13,7 +13,7 @@ namespace leanstore
 namespace storage
 {
 // -------------------------------------------------------------------------------------
-const u64 PAGE_SIZE = 4 * 1024;
+const u64 PAGE_SIZE = 4 * 1024 * 1;
 // -------------------------------------------------------------------------------------
 struct BufferFrame {
    enum class STATE : u8 { FREE = 0, HOT = 1, COOL = 2, LOADED = 3 };
diff --git a/frontend/CMakeLists.txt b/frontend/CMakeLists.txt
index 7ab01ef..a47e44c 100644
--- a/frontend/CMakeLists.txt
+++ b/frontend/CMakeLists.txt
@@ -30,32 +30,32 @@ add_executable(min minimalExample/main.cpp)
 target_link_libraries(min leanstore Threads::Threads)
 target_include_directories(min PRIVATE ${SHARED_INCLUDE_DIRECTORY})
 
-add_executable(rocksdb_tpcc tpc-c/rocksdb_tpcc.cpp)
-target_link_libraries(rocksdb_tpcc leanstore rocksdb Threads::Threads dl z libbz2.a lz4 snappy zstd uring)
-target_include_directories(rocksdb_tpcc PRIVATE ${SHARED_INCLUDE_DIRECTORY})
-target_compile_definitions(rocksdb_tpcc PUBLIC ROCKSDB_ADAPTER)
-
-add_executable(rocksdb_ycsb ycsb/rocksdb_ycsb.cpp)
-target_link_libraries(rocksdb_ycsb leanstore rocksdb Threads::Threads dl z libbz2.a lz4 snappy zstd uring)
-target_include_directories(rocksdb_ycsb PRIVATE ${SHARED_INCLUDE_DIRECTORY})
-target_compile_definitions(rocksdb_ycsb PUBLIC ROCKSDB_ADAPTER)
-# sudo apt-get install libsnappy-dev  zlib1g-dev libbz2-dev liblz4-dev libzstd-dev librocksdb-dev
-
-add_executable(wiredtiger_tpcc tpc-c/wiredtiger_tpcc.cpp)
-target_link_libraries(wiredtiger_tpcc leanstore wiredtiger Threads::Threads dl z libbz2.a lz4 snappy)
-target_include_directories(wiredtiger_tpcc PRIVATE ${SHARED_INCLUDE_DIRECTORY})
-
-add_executable(wiredtiger_ycsb ycsb/wiredtiger_ycsb.cpp)
-target_link_libraries(wiredtiger_ycsb leanstore wiredtiger Threads::Threads dl z libbz2.a lz4 snappy)
-target_include_directories(wiredtiger_ycsb PRIVATE ${SHARED_INCLUDE_DIRECTORY})
-# prefer https://source.wiredtiger.com/10.0.0/build-posix.html over sudo apt-get install wiredtiger libwiredtiger-dev
-
-
-add_executable(lmdb_tpcc tpc-c/lmdb_tpcc.cpp)
-target_link_libraries(lmdb_tpcc leanstore lmdb Threads::Threads)
-target_include_directories(lmdb_tpcc PRIVATE ${SHARED_INCLUDE_DIRECTORY})
-
-add_executable(lmdb_ycsb ycsb/lmdb_ycsb.cpp)
-target_link_libraries(lmdb_ycsb leanstore lmdb Threads::Threads)
-target_include_directories(lmdb_ycsb PRIVATE ${SHARED_INCLUDE_DIRECTORY})
-# sudo apt-get install liblmdb-dev
+#add_executable(rocksdb_tpcc tpc-c/rocksdb_tpcc.cpp)
+#target_link_libraries(rocksdb_tpcc leanstore rocksdb Threads::Threads dl z libbz2.a lz4 snappy zstd uring)
+#target_include_directories(rocksdb_tpcc PRIVATE ${SHARED_INCLUDE_DIRECTORY})
+#target_compile_definitions(rocksdb_tpcc PUBLIC ROCKSDB_ADAPTER)
+#
+#add_executable(rocksdb_ycsb ycsb/rocksdb_ycsb.cpp)
+#target_link_libraries(rocksdb_ycsb leanstore rocksdb Threads::Threads dl z libbz2.a lz4 snappy zstd uring)
+#target_include_directories(rocksdb_ycsb PRIVATE ${SHARED_INCLUDE_DIRECTORY})
+#target_compile_definitions(rocksdb_ycsb PUBLIC ROCKSDB_ADAPTER)
+## sudo apt-get install libsnappy-dev  zlib1g-dev libbz2-dev liblz4-dev libzstd-dev librocksdb-dev
+#
+#add_executable(wiredtiger_tpcc tpc-c/wiredtiger_tpcc.cpp)
+#target_link_libraries(wiredtiger_tpcc leanstore wiredtiger Threads::Threads dl z libbz2.a lz4 snappy)
+#target_include_directories(wiredtiger_tpcc PRIVATE ${SHARED_INCLUDE_DIRECTORY})
+#
+#add_executable(wiredtiger_ycsb ycsb/wiredtiger_ycsb.cpp)
+#target_link_libraries(wiredtiger_ycsb leanstore wiredtiger Threads::Threads dl z libbz2.a lz4 snappy)
+#target_include_directories(wiredtiger_ycsb PRIVATE ${SHARED_INCLUDE_DIRECTORY})
+## prefer https://source.wiredtiger.com/10.0.0/build-posix.html over sudo apt-get install wiredtiger libwiredtiger-dev
+#
+#
+#add_executable(lmdb_tpcc tpc-c/lmdb_tpcc.cpp)
+#target_link_libraries(lmdb_tpcc leanstore lmdb Threads::Threads)
+#target_include_directories(lmdb_tpcc PRIVATE ${SHARED_INCLUDE_DIRECTORY})
+#
+#add_executable(lmdb_ycsb ycsb/lmdb_ycsb.cpp)
+#target_link_libraries(lmdb_ycsb leanstore lmdb Threads::Threads)
+#target_include_directories(lmdb_ycsb PRIVATE ${SHARED_INCLUDE_DIRECTORY})
+## sudo apt-get install liblmdb-dev
diff --git a/frontend/ycsb/deterministic.cpp b/frontend/ycsb/deterministic.cpp
index 9ca7e87..5a07828 100644
--- a/frontend/ycsb/deterministic.cpp
+++ b/frontend/ycsb/deterministic.cpp
@@ -1,5 +1,5 @@
 #include "../shared/LeanStoreAdapter.hpp"
-#include "Schema.hpp"
+#include "../shared/Schema.hpp"
 #include "Units.hpp"
 #include "leanstore/Config.hpp"
 #include "leanstore/LeanStore.hpp"
